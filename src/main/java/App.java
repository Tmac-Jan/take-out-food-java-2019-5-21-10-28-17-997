import java.text.DecimalFormat;
import java.util.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        //TODO: write code here
        //获取所有商品信息
        List<Item> itemList = itemRepository.findAll();

        //获取所有商品的名字
        List<String> itemNameList = new ArrayList(0);
        itemList.forEach(e -> itemNameList.add(e.getId()));

        //购买的商品
        Map<Item, Integer> cartMap = new LinkedHashMap<>(0);
        inputs.forEach(e -> {
            String s[] = e.split("x");
            if (itemNameList.contains(s[0].trim())) {
                //假设数量肯定为整数
//                System.out.println("s[0]"+s[0].trim());
                cartMap.put(getItem(itemList, s[0].trim()), Integer.parseInt(s[1].trim()));
            }
        });

        //获取所有活动信息
        List<SalesPromotion> salesPromotionList = salesPromotionRepository.findAll();
        //获取活动商品名字
        List<String>spNameList = new ArrayList<>(0);
        //每种活动的总价
//        List<Double> totalPriceList = new ArrayList<>(0);
        //total1活动一总价 total2活动2总价
        double total1=0,total2=0;
        double currentPrice ;
        double totalPrice = 0;

        DecimalFormat df = new DecimalFormat("0");
        String output = "============= 订餐明细 =============\n";

        //计算每种活动的
        for (SalesPromotion sp : salesPromotionList) {
            if (sp.getRelatedItems().size() == 0) {//活动一
                for (Item item : cartMap.keySet()) {
                    currentPrice = item.getPrice() * cartMap.get(item);
                    total1 += currentPrice;
                    output += item.getName() + " x " + cartMap.get(item) + " = " + df.format(currentPrice)+ "元\n";
                }
                //是否大于30
                total1=total1>30?(total1-=6):total1;
            }
            if (sp.getRelatedItems().size() > 0) {//活动二
                for (Item item : cartMap.keySet()) {
                    if (sp.getRelatedItems().contains(item.getId())){
                        System.out.println("半价商品"+item.getName());
                        currentPrice = item.getPrice() * cartMap.get(item)/2;
                        total2 += currentPrice;
                    }else{
                        System.out.println("全价商品"+item.getName());
                        currentPrice = item.getPrice() * cartMap.get(item);
                        total2 += currentPrice;
                    }
//                    output += item.getName() + " x " + cartMap.get(item) + " = " + df.format(currentPrice);
                }
               sp.getRelatedItems().forEach(e->spNameList.add(getItem(itemList,e).getName()));//添加到活动涉及商品表
            }
        }
        output += "-----------------------------------\n";
        if (total1<=total2){
            if (total1+6>30){
                output += "使用优惠:\n" ;
                output += (salesPromotionList.get(0).getDisplayName() + "，省6元\n");
                output += "-----------------------------------\n";
                output += "总计："+ df.format(total1) + "元\n" ;
                output += "===================================";
            }else{
                output += "总计："+ df.format(total1) + "元\n" ;
                output += "===================================";
            }
        }else{
            double save = total1+6-total2;
            output+="使用优惠:\n";
//            String names = StringUtils.join(spNameList,"，");
            String names = String.join("，",spNameList);
            output+="指定菜品半价("+names+")，省"+df.format(save)+"元\n";
            output += "-----------------------------------\n";
            output += ("总计："+ df.format(total2) + "元\n" );
            output += "===================================";
        }
        System.out.println("total1:"+total1+"\n"+"total2:"+total2);
        return output;
    }

    private Item getItem(List<Item> itemList, String id) {
        Item itemRe = null;
        for (Item item : itemList) {
//            System.out.println(item);
            if (item.getId().equals(id)) {
              itemRe = item;
              break;
            }
        }
        return itemRe;
    }
}
